shiny::runApp()
shiny::runApp()
help("sliderInput")
faithful
faithful[1:3,]
shiny::runApp()
shiny::runApp()
help("renderText")
library(quantmod)
help("quantmod")
))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
stockID_pattern = "[0-9]+[.][sS][sSzZ]"
# server.R
library(quantmod)
#source("helpers.R")
stockID_pattern = "[0-9]+[.][sS][sSzZ]"
shinyServer(function(input, output) {
dataInput <- reactive({
setSymbolLookup(GZMT=list(name=input$symb,src='yahoo'))
data <- getSymbols("GZMT",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
return (data)
})
output$plot <- renderPlot({
if(length(grep(stockID_pattern, input$symb)) == 0)
return (NA)
#chartSeries(GZMT)
chartSeries(dataInput(), theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
})
library(shiny)
shinyUI(fluidPage(
titlePanel("stockVis"),
sidebarLayout(
sidebarPanel(
helpText("Select a stock to examine.
Information will be collected from yahoo finance."),
textInput("symb", "Symbol", "SPY"),
dateRangeInput("dates",
"Date range",
start = "2013-01-01",
end = as.character(Sys.Date())),
br(),
br(),
checkboxInput("log", "Plot y axis on log scale",
value = FALSE),
checkboxInput("adjust",
"Adjust prices for inflation", value = FALSE)
),
mainPanel(plotOutput("plot"))
)
))
grep(stockID_pattern,"12313.sz")
length(grep(stockID_pattern,"12313.sz"))
length(grep(stockID_pattern,"12313sz"))
shiny::runApp()
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
strtrim(c("abcdef", "abcdef", "abcdef"))
library(stringr)
str_trim()
length(grep(stockID_pattern," 12313.sz"))
length(grep(stockID_pattern," 12313.sz  "))
length(grep(stockID_pattern," a12313.sz  "))
length(grep(stockID_pattern,"a12313.sz"))
length(grep(stockID_pattern,"a12313sz"))
length(grep(stockID_pattern,"12313sz"))
length(grep("[0-9]+[.][sS][sSzZ]","12313sz"))
length(grep("[0-9]+[.][sS][sSzZ]","123sd13.sz"))
length(grep("[0-9]+\\.[sS][sSzZ]","123sd13.sz"))
grep("[0-9]+\\.[sS][sSzZ]","123sd13.sz")
grep("[1-9]+\\.[sS][sSzZ]","123sd13.sz")
grep("[1-9]+\\.[sS][sSzZ]","123sd13.sz")
grep("[1-9]+\\.[sS][sSzZ]","123sd13sz")
grep("[1-9]+\\.[sS][sSzZ]","123sd13.sz")
grep("[1-9]+\\.[sS][sSzZ]","123   .sz")
grep("[1-9]+\\.[sS][sSzZ]","123ss.sz")
grep("[1-9]+\\.[sS][sSzZ]","123ss213.sz")
help("gregexpr")
grep("\d{6}[.][sS][sSzZ]","123ss213.sz")
grep("\\d{6}[.][sS][sSzZ]","123ss213.sz")
grep("\\d{6}[.][sS][sSzZ]","123213.sz")
grep("\\d{6}[.][sS][sSzZ]","123213sz")
grep("\\d{6}[.][sS][sSzZ]","123213 .sz")
grep("\\d{6}[.][sS][sSzZ]","123213.sz")
grep("\\d{6}[.][sS][sSzZ]","23213.sz")
grep("\\d{6}[.][sS][sSzZ]","2321.sz")
grep("\\d{6}[.][sS][sSzZ]","232100.sz")
grep("\\d{6}[.][sS][sSzZ]","232100.ss")
grep("\\d{6}[.][sS][sSzZ]","232100.zs")
grep("[\d]{6}[.][sS][sSzZ]","232100.zs")
grep("\d{6}[.][sS][sSzZ]","232100.zs")
shiny::runApp()
setSymbolLookup(GZMT=list(name="600999.sh",src='yahoo'))
data <- getSymbols("GZMT",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
setSymbolLookup(GZMT=list(name="600999.sh",src='yahoo'))
data <- getSymbols("GZMT",
from = "2013-01-01",
to = as.character(Sys.Date()),
auto.assign = FALSE)
setSymbolLookup(GZMT=list(name="600999.ss",src='yahoo'))
data <- getSymbols("GZMT",
from = "2013-01-01",
to = as.character(Sys.Date()),
auto.assign = FALSE)
data
data[1,]
data[1:5,]
data[100:105,]
help("getSymbols")
setSymbolLookup(GZMT=list(name="600030.ss",src='yahoo'))
data <- getSymbols("GZMT",
from = "2013-01-01",
to = as.character(Sys.Date()),
auto.assign = FALSE)
data[1,]
data[nrow(data)-10: nrow(data),]
library(rvest)
webpage = read_html("http://vip.stock.finance.sina.com.cn/corp/go.php/vMS_FuQuanMarketHistory/stockid/600030.phtml?year=2015&jidu=3")
webpage
webpage %>% html_node("table#FundHoldSharesTable")
webpage %>% html_node("table#FundHoldSharesTable") %>% html_table()
data[1,]
is(data)
help(xts)
xts(webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
xts((webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())[-1,])
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
data_table
colnames(data_table) = data_table[1,]
data_table[1:5,]
data_table = data_table[-1,]
data_table[1:5,]
as.xts(data_table)
help(ts)
ts(data_table)
data_table[1,]
help("xts")
is(dta)
is(data)
xtsible(data_table)
data[1,]
data_table[1,]
data_table[1,ncol(data_table)]
data_table[1:5,ncol(data_table)]
data_table[1:5,c(1,ncol(data_table))]
rownames(data_table) = data_table$日期
data_table[1,]
data_table = data_table[2:ncol(data_table),]
data_table[1:2,]
data_table = data_table[,2:ncol(data_table)]
data_table[1:5,]
xts(data_table)
ts(data_table)
data_table
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
data_table[1:5,]
colnames(data_table) = data_table[1,]
data_table = data_table[-1,]
data_table[1:5,]
help(ts)
rownames(data_table) = data_table$日期
data_table = data_table[,-1]
data_table[1:5,]
as.fts.xts(data_table)
help(zoo)
help(time)
zoo(data_table, rownames(data_table))
zoo(data_table, rownames(data_table))[1:5]
xts(zoo(data_table, rownames(data_table)))
zoo(data_table, rownames(data_table))
help(ts)
ts(zoo(data_table, rownames(data_table)))
xts(ts(zoo(data_table, rownames(data_table))))
temp = zoo(data_table, rownames(data_table))
xts(temp, index(temp))
temp = ts(temp)
is(temp)
help(xts)
xts(temp)
index(temp)
attributes(temp)
temp$index
xts(temp, attr(temp,"index"))
attr(temp,"index")
help()
is(temp)
is(mts)
help(mts)
temp = zoo(data_table, rownames(data_table))
index(temp)
xts(temp, index(temp))
data[1,]
xts(temp, order.by = index(temp))
xts(temp, order.by = as.Date(index(temp)))
xts(as.numeric(temp), order.by = as.Date(index(temp)))
xts(as.numeric(temp), order.by = as.Date(index(temp)))
xts(temp, order.by = as.Date(index(temp)))
temp = xts(temp, order.by = as.Date(index(temp)))
chartSeries(temp)
temp[1,]
help("chart_Series")
temp[,1]
as.numeric(temp[,1])
temp[,1] = as.numeric(temp[,1])
temp[1,]
temp[,1]
temp[1,]
temp[1,]
data_table[1,]
as.numeric(data_table)[1,]
library(dplyr)
tbl_df(data_table)
temp = tbl_df(data_table)
data_table[1:5,]
temp
rownames(temp)
rownames(temp) = rownames(data_table)
temp
help("read_html")
help("html_table")
for(i in 1:ncol(data_table)){
data[,i] = as.numeric(data[,i])
}
for(i in 1:ncol(data_table)){
data_table[,i] = as.numeric(data_table[,i])
}
data_table[1,]
xts(data_table, as.Date(rownames(data_table)))
temp = xts(data_table, as.Date(rownames(data_table)))
chartSeries(temp, theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
chartSeries(temp, theme = chartTheme("white"),
type = "line", TA = NULL)
chartSeries(temp, theme = chartTheme("white"),
type = "line", TA = NULL, log.scale = TRUE)
help(format)
format(Sys.Date(), format = "%y/0%q")
Sys.Date()
format(Sys.Date(), format = "%q")
format(Sys.Date(), "%Y-%m-%d",format = "%q")
format(Sys.Date(), format = "%Y-%m-%d", "%q")
format(Sys.Date(), format = "%q")
as.yearqtr(Sys.Date())
format(as.yearqtr(Sys.Date()), format = "%q")
format("2015-06", format = "%q")
format("2015-06", format = "%y%q")
format("2015-06", format = "%Y-%m")
format("2015-06", format = "%Y-%m", "%q")
format(as.POSIXct(as.character(Sys.Date()),
format="%Y-%m-%d"), "%Y%m%d")
format(as.POSIXct(as.character(Sys.Date()),
format="%Y-%m-%d"), "%q")
request_parameter = format(as.yearqtr(Sys.Date()), format = "year=%Y&jidu=%q")
request_parameter
request_parameter = format(as.yearqtr(Sys.Date()), format = "year=%Y&jidu=%q")
stockid = "600030"
host_url = "http://vip.stock.finance.sina.com.cn/corp/go.php/vMS_FuQuanMarketHistory/stockid/"
url = paste(host_url,stockid,"phtml?",request_parameter,sep = "")
url
#复权历史交易信息页面
RestorationofRight_url = "http://vip.stock.finance.sina.com.cn/corp/go.php/vMS_FuQuanMarketHistory/stockid/"
(webpage %>% html_node("table#FundHoldSharesTable") %>% html_node("tbody")
%>% html_table())
(webpage %>% html_node("table#FundHoldSharesTable") %>% html_node("tbody") )
webpage
(webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
(webpage %>% html_node("table#FundHoldSharesTable"))
(webpage %>% html_node("table#FundHoldSharesTable")) %>% html_node("tbody")
(webpage %>% html_node("table#FundHoldSharesTable")[1]
(webpage %>% html_node("table#FundHoldSharesTable"))[1]
help("html_table")
(webpage %>% html_node("table#FundHoldSharesTable tbody"))
getRestorationofRightPrice = function(date, stockid){
#获取时间中的年份和季度信息
request_parameter = format(as.yearqtr(date), format = "year=%Y&jidu=%q")
url = paste(RestorationofRight_url,stockid,".phtml?",request_parameter,sep = "")
webpage = read_html(url)#请求网页
#解析网页中的历史复权数据
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_node("tbody")
%>% html_table())
rownames(data_table) = data_table[,1]#将实践信息转成行索引
data_table = data_table[-1,]#去掉第一行
for(i in 1:ncol(data_table)){
#将数字字符串转成数字
data_table[,i] = as.numeric(data_table[,i])
}
return (data_table)
}
temp = getRestorationofRightPrice("2015-12-19","600030")
source("sina_data_url.R")
getRestorationofRightPrice = function(date, stockid){
#获取时间中的年份和季度信息
request_parameter = format(as.yearqtr(date), format = "year=%Y&jidu=%q")
url = paste(RestorationofRight_url,stockid,".phtml?",request_parameter,sep = "")
print(url)
webpage = read_html(url)#请求网页
#解析网页中的历史复权数据
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
rownames(data_table) = data_table[,1]#将实践信息转成行索引
data_table = data_table[-1,]#去掉第一行
for(i in 1:ncol(data_table)){
#将数字字符串转成数字
data_table[,i] = as.numeric(data_table[,i])
}
return (data_table)
}
temp = getRestorationofRightPrice("2015-12-19","600030")
format(as.yearqtr("2015-12-19"), format = "year=%Y&jidu=%q")
getRestorationofRightPrice = function(date, stockid){
#获取时间中的年份和季度信息
request_parameter = format(as.yearqtr(as.Date(date)), format = "year=%Y&jidu=%q")
url = paste(RestorationofRight_url,stockid,".phtml?",request_parameter,sep = "")
print(url)
webpage = read_html(url)#请求网页
#解析网页中的历史复权数据
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
rownames(data_table) = data_table[,1]#将实践信息转成行索引
data_table = data_table[-1,]#去掉第一行
for(i in 1:ncol(data_table)){
#将数字字符串转成数字
data_table[,i] = as.numeric(data_table[,i])
}
return (data_table)
}
temp = getRestorationofRightPrice("2015-12-19","600030")
temp
getRestorationofRightPrice = function(date, stockid){
#获取时间中的年份和季度信息
request_parameter = format(as.yearqtr(as.Date(date)), format = "year=%Y&jidu=%q")
url = paste(RestorationofRight_url,stockid,".phtml?",request_parameter,sep = "")
print(url)
webpage = read_html(url)#请求网页
#解析网页中的历史复权数据
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
colnames(data_table) = data[1,]#数据的第一行为表头
data_table = data_table[-1,]#去掉第一行
rownames(data_table) = data_table[,1]#将时间信息转成行索引
data_table = data_table[,-1]#去掉第一列
for(i in 1:ncol(data_table)){
#将数字字符串转成数字
data_table[,i] = as.numeric(data_table[,i])
}
return (data_table)
}
temp = getRestorationofRightPrice("2015-12-19","600030")
temp[1:5,]
temp = getRestorationofRightPrice("2015-08-19","600030")
temp[1:5,]
data_table[1:5,]
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
data_table[1:5,]
getRestorationofRightPrice = function(date, stockid){
#获取时间中的年份和季度信息
request_parameter = format(as.yearqtr(as.Date(date)), format = "year=%Y&jidu=%q")
url = paste(RestorationofRight_url,stockid,".phtml?",request_parameter,sep = "")
print(url)
webpage = read_html(url)#请求网页
#解析网页中的历史复权数据
data_table = (webpage %>% html_node("table#FundHoldSharesTable") %>% html_table())
colnames(data_table) = data_table[1,]#数据的第一行为表头
data_table = data_table[-1,]#去掉第一行
rownames(data_table) = data_table[,1]#将时间信息转成行索引
data_table = data_table[,-1]#去掉第一列
for(i in 1:ncol(data_table)){
#将数字字符串转成数字
data_table[,i] = as.numeric(data_table[,i])
}
return (data_table)
}
temp = getRestorationofRightPrice("2015-08-19","600030")
temp[1:5,]
data_table[1:5,]
